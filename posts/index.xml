<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on gzhh&#39;s blog</title>
    <link>https://blog.gzhh.tech/posts/</link>
    <description>Recent content in Posts on gzhh&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 17 Sep 2022 02:43:00 +0800</lastBuildDate><atom:link href="https://blog.gzhh.tech/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Hugo 和 Github Actions 部署静态网站</title>
      <link>https://blog.gzhh.tech/posts/deploy-static-site-with-hugo-and-github-actions/</link>
      <pubDate>Sat, 17 Sep 2022 02:43:00 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/deploy-static-site-with-hugo-and-github-actions/</guid>
      <description>Table Of Contents 说在前面 博客搭建 首先跟着 Hugo 官方教程一步步操作 再将静态内容发布到 Github Page 使用 Github Action 优化部署 将本地博客项目同步到远程 Github 仓库 新建 workflow 配置域名及域名解析 博客图片 博客评论 参考 说在前面 年初将自己个人博客的部署方式改为 Github Actions 自动部署，其中碰到的坑一直没有空整理成文章输出出来，今天统一将内容整理到这篇文章。
写之前顺便提下自己写技术博客的历程吧，最开始写博客的时候差不多是在大二的样子，当时主要是在 CSDN 上面写，内容差不多都是记录总结学习各个技术栈碰到的坑；后来大三快出来实习的时候，买了台阿里云的低配 ECS，使用 Wordpress 将自己的个人博客部署在上面；再后来觉得 Wordpress 需要数据库存储内容、且不太好能结合 Markdown 写博客、还有没有太好看的主题等原因，然后就换成在 Jekyll 和 Hexo 对比中选择了后者；Hexo 还是部署在阿里云的，部署方式是通过在 ECS 上搭建 Git 仓库，通过 Git 钩子将 Hexo 生成的博客静态页面文件，推送到 Nginx 服务的托管目录，完成部署。
到了去年年底，用了几年的阿里云 ECS 到期了，由于续费太贵就没续费，于是就买了腾讯云的 Lighthouse 服务器，打算把博客也迁移过来。但是之前使用 Hexo 的那套部署方式比较麻烦，所以搜索了一番就决定使用 Hugo 和 Github Page 来部署静态博客。
博客搭建 首先跟着 Hugo 官方教程一步步操作 Hugo quick-start</description>
    </item>
    
    <item>
      <title>【阅读笔记】Understanding Distributed Systems</title>
      <link>https://blog.gzhh.tech/posts/understanding-distributed-systems/</link>
      <pubDate>Mon, 15 Aug 2022 00:30:07 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/understanding-distributed-systems/</guid>
      <description>Table Of Contents 1. Introduction Part I: Communication 2. Reliable links 3. Secure links 4. Discovery 5. APIs Part II: Coordination 8. Time 9. Leader election 10. Replication 11. Coordination avoidance 12 . Transactions 13. Asynchronous transactions Part III: Scalability 14. HTTP caching 15. Content delivery networks 16. Partitioning 17. File storage 18. Network load balancing 19. Data storage 20. Caching 21. Microservices 22. Control planes and data planes 23.</description>
    </item>
    
    <item>
      <title>【阅读笔记】The Effective Engineer</title>
      <link>https://blog.gzhh.tech/posts/the-effective-engineer/</link>
      <pubDate>Sat, 16 Jul 2022 18:30:07 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-effective-engineer/</guid>
      <description>Table Of Contents Part 1: Adopt the Right Mindsets 1. Focus on High-Leverage Activities 2. Optimize for Learning 3. Prioritize Regularly Part 2: Execute, Execute, Execute 4. Invest in Iteration Speed 5. Measure What You Want to Improve 6. Validate Your Ideas Early and Often 7. Improve Your Project Estimation Skills Part 3: Build Long-Term Value 8. Balance Quality with Pragmatism 9. Minimize Operational Burden 10. Invest in Your Team’s Growth Reference Part 1: Adopt the Right Mindsets 1.</description>
    </item>
    
    <item>
      <title>【阅读笔记】微服务架构设计模式</title>
      <link>https://blog.gzhh.tech/posts/microservices-patterns/</link>
      <pubDate>Mon, 20 Jun 2022 17:58:50 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/microservices-patterns/</guid>
      <description>Table Of Contents 一、系统架构设计介绍 单体架构 微服务架构 二、服务的拆分策略 拆分规范 拆分策略 拆分难点 三、微服务架构中的进程间通信 RPC（同步通信机制） 同步通信机制局部故障问题 服务发现 消息代理 MQ（异步消息通信机制） 四、管理事务 Saga 五、微服务架构中的业务逻辑设计 业务逻辑组织模式 领域驱动设计 DDD 六、使用事件溯源开发业务逻辑 七、在微服务架构中实现查询 使用API组合模式进行查询 使用CQRS模式 八、外部API模式 九 &amp;amp; 十、微服务架构中的测试策略 自动化测试的四个阶段 测试的不同类型 测试金字塔 使用测试象限进行分类 十一、开发面向生产环境的微服务应用 安全性 可配置 设计可观测的服务 使用微服务基底模式开发服务 服务网格 十二：部署微服务应用 虚拟机 docker k8s 容器部署 Serverless 部署 十三、微服务架构的重构策略 需要考虑的问题 重构策略 设计服务与单体的协作方式 将新功能实现为服务 从单体中提取功能到独立服务 参考 一、系统架构设计介绍 单体架构 定义：一个系统的所有子模块都被部署在同一台服务器上。
单体架构的好处
应用的开发简单 易于对应用程序进行大规模的更改 测试相对简单直观 部署简单 横向扩展容易 单体地狱
随着不断的在单体架构的基础上扩展，每一次实现更多功能的时候，就会导致代码库膨胀。并且随着研发团队规模的不断壮大，团队的管理成本也不断提高，开发变得缓慢和痛苦。
单体架构的弊端
过度的复杂性会吓退开发者 开发速度缓慢 从代码提交到实际部署的周期很长，而且容易出问题 难以扩展 交付可靠的单体应用是一项挑战 需要长期依赖某个可能过时的技术栈 微服务架构 定义：将一个单体应用按照不同的功能模块进行分解，拆分成一个个小的服务，每个服务实现了一组相关的功能。</description>
    </item>
    
    <item>
      <title>2022新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2022/</link>
      <pubDate>Fri, 31 Dec 2021 23:55:50 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2022/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gin 生命周期</title>
      <link>https://blog.gzhh.tech/posts/lifecycle-of-gin-framework/</link>
      <pubDate>Mon, 05 Jul 2021 17:38:50 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/lifecycle-of-gin-framework/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2021新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2021/</link>
      <pubDate>Fri, 01 Jan 2021 01:10:50 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>理解 Go 函数中的切片传参</title>
      <link>https://blog.gzhh.tech/posts/understand-slice-param-in-go-function/</link>
      <pubDate>Fri, 19 Jun 2020 17:00:00 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/understand-slice-param-in-go-function/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MySQL 锁</title>
      <link>https://blog.gzhh.tech/posts/know_mysql_lock/</link>
      <pubDate>Sun, 23 Feb 2020 09:43:53 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/know_mysql_lock/</guid>
      <description></description>
    </item>
    
    <item>
      <title>LaTeX 学习记录</title>
      <link>https://blog.gzhh.tech/posts/latex-usage-notes/</link>
      <pubDate>Sun, 20 Oct 2019 17:23:05 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/latex-usage-notes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lua 语言入门（二）</title>
      <link>https://blog.gzhh.tech/posts/play-lua-second/</link>
      <pubDate>Sun, 06 Oct 2019 09:22:54 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/play-lua-second/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lua 语言入门（一）</title>
      <link>https://blog.gzhh.tech/posts/play-lua-first/</link>
      <pubDate>Sun, 29 Sep 2019 20:20:36 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/play-lua-first/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【操作系统】3.内存memory(抽象的地址空间)</title>
      <link>https://blog.gzhh.tech/posts/operating-system-3.memory/</link>
      <pubDate>Mon, 11 Mar 2019 01:08:00 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/operating-system-3.memory/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【操作系统】2.调度scheduling</title>
      <link>https://blog.gzhh.tech/posts/operating-system-2.scheduling/</link>
      <pubDate>Wed, 27 Feb 2019 16:37:33 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/operating-system-2.scheduling/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【操作系统】1.进程process</title>
      <link>https://blog.gzhh.tech/posts/operating-system-1.process/</link>
      <pubDate>Mon, 25 Feb 2019 23:00:39 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/operating-system-1.process/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【操作系统】基础概念介绍</title>
      <link>https://blog.gzhh.tech/posts/operating-system-0.basic-info/</link>
      <pubDate>Sat, 23 Feb 2019 09:43:53 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/operating-system-0.basic-info/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2019新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2019/</link>
      <pubDate>Tue, 01 Jan 2019 22:10:51 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2019/</guid>
      <description></description>
    </item>
    
    <item>
      <title>对于如何提升能力的一些思考</title>
      <link>https://blog.gzhh.tech/posts/how-to-improve-yourself/</link>
      <pubDate>Thu, 06 Sep 2018 00:53:07 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/how-to-improve-yourself/</guid>
      <description>&lt;p&gt;如何在技术快速发展的时代成为逐浪者？随着接触越来越多的新技术新名词，内心就越会感觉到知识的空虚，恨不得一下子就多学一门新技术，但是对每个技术都是浅尝即止，很难深入．最近思来想去只能把问题集中在基础不扎实上．如果技术扎实，那么在尝试新技术的时候心里底气就会足一点，学起来也就不会那么吃力了．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSO 单点登录</title>
      <link>https://blog.gzhh.tech/posts/sso/</link>
      <pubDate>Sun, 01 Apr 2018 23:24:03 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/sso/</guid>
      <description></description>
    </item>
    
    <item>
      <title>常见排序算法</title>
      <link>https://blog.gzhh.tech/posts/sort-algorithm/</link>
      <pubDate>Sun, 01 Apr 2018 23:24:03 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/sort-algorithm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【VIM】vim常用操作</title>
      <link>https://blog.gzhh.tech/posts/vim-skill/</link>
      <pubDate>Fri, 23 Mar 2018 09:22:30 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/vim-skill/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2018新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2018/</link>
      <pubDate>Mon, 01 Jan 2018 00:43:02 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2018/</guid>
      <description>&lt;p&gt;2018要来了，回想2017年出校门实习的这半年来，学到了挺多职场的知识，但是对自己还是不够满意，比自己的期望也低了好多，而且人也变得懒惰了，希望2018能改掉这些毛病，努力争取获取的一个更好的机会。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>玩转sed操作文本-基础篇</title>
      <link>https://blog.gzhh.tech/posts/play-sed-first/</link>
      <pubDate>Fri, 17 Nov 2017 18:42:35 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/play-sed-first/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2017新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2017/</link>
      <pubDate>Sun, 01 Jan 2017 23:26:25 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2017/</guid>
      <description>&lt;p&gt;今天是2017年的第一天，度过了有很过欢笑也有很多悲伤的2016年，不管怎样，2016年都过去了，新生活还要继续，写点新年的计划吧，虽然知道很大部分很难完成，但还是写一下吧，万一完成了呢。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on gzhh&#39;s blog</title>
    <link>https://blog.gzhh.tech/categories/linux/</link>
    <description>Recent content in Linux on gzhh&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 23 Mar 2018 09:22:30 +0800</lastBuildDate>
    <atom:link href="https://blog.gzhh.tech/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【VIM】vim常用操作</title>
      <link>https://blog.gzhh.tech/posts/vim-skill/</link>
      <pubDate>Fri, 23 Mar 2018 09:22:30 +0800</pubDate>
      <guid>https://blog.gzhh.tech/posts/vim-skill/</guid>
      <description>1.一般模式(默认模式)： Ctrl+f 向下移动一页 Ctrl+b 向上移动一页 0或Home&#x9;移到这一行的最前面字符处 $或End&#x9;移到这一行的最后面字符处 G&#x9;移到这个文件的最后一行 nG&#x9;移到这个文件的第n行 gg&#x9;移到这个文件的第一行 n+Enter 向下移动n行&#xA;查找 /word 向下寻找一个名称为word的字符串 ?word&#x9;向上寻找一个名称为word的字符串 n 向下重复前一个查找 N 向上重复前一个查找&#xA;替换 :n1,n2s/word1/word2/g 在第n1行与n2行直接寻找word1这个字符串，并将该字符串替换为word2 :n1,n2s/word1/word2/gc&#x9;逐个询问是否替换 :1,$s/word1/word2/g 第一行到最后一行 ;1,$s/word1/word2/gc 逐个询问&#xA;第一行到最后一行 :1,$s/search/replace/g :%s/search/replace/g&#xA;指定行m,n :m,ns/search/replace/g&#xA;当前行到x行 :.,.+xs/search/replace/g&#xA;当前行到最后一行 :.,$s/search/replace/g&#xA;删除 x,X 向后向前删除字符，(Del, Backspace) nx dd&#x9;删除光标所在的那一行 ndd&#x9;往下删除n行&#xA;复制 yy&#x9;复制光标所在的那一行 nyy&#x9;向下复制n行&#xA;粘贴 p,p 向上向下粘贴&#xA;复原前一个操作 u&#xA;重复上一个操作 Ctrl+r或.&#xA;2.编辑模式 一般模式按i,I,o,O,a,A,r,R其中一个可进入编辑模式，编辑模式按Esc可退回一般模式 i,I 光标所在行插入 a,A 光标下一个字符插入，光标行之后一个字符插入 o,O 下一行插入，上一行插入 r,R 替换光标所在字符</description>
    </item>
    <item>
      <title>玩转sed操作文本-基础篇</title>
      <link>https://blog.gzhh.tech/posts/play-sed-first/</link>
      <pubDate>Fri, 17 Nov 2017 18:42:35 +0800</pubDate>
      <guid>https://blog.gzhh.tech/posts/play-sed-first/</guid>
      <description>介绍 sed 全名是 stream editor，是文本流处理方面的强大工具，和另一个文本处理工具 awk 工具有的一比，接下来就让我们简单介绍下它的基本使用和适用场景。 我们这篇主要讲的是 Gnu sed，还有一个常用的是 BSD sed（Mac OS就是源自 BSD 的），两者略微有点不同，不过他们俩都是由 Posix sed 演化而来。&#xA;基本格式 sed 命令的执行有两种基本格式 sed [-参数] command [file &amp;hellip;] sed [-参数] [-e command] [-f command_file] [-i extension]&#xA;参数 默认情况下，sed 不会操作原来的文本，加上 -i 参数则会改变原文件的内容 sed -i command [file &amp;hellip;]&#xA;替换 1.将文件中每行所有的字符 , 都替换为空字符(不加 g 标记则只替换每行第一个匹配) sed &#39;s/,/ /g&#39; file.txt 2.从第 N 处匹配开始替换 /ng sed &#39;s/,/ /2g&#39; file.txt 3.将字符 , 替换为空字符并保存替换后的内容 sed -i &#39;s/,/ /g&#39; file.</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gzhh&#39;s blog</title>
    <link>https://blog.gzhh.tech/</link>
    <description>Recent content on gzhh&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 08 Feb 2023 16:00:00 +0800</lastBuildDate><atom:link href="https://blog.gzhh.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://blog.gzhh.tech/about/</link>
      <pubDate>Mon, 06 Dec 2021 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/about/</guid>
      <description>嗨，我是 gzhh。
我居住在中国，是一名后端开发工程师。
Hi, I&amp;rsquo;m gzhh.
I live in China and work as an backend engineer.</description>
    </item>
    
    <item>
      <title>Read</title>
      <link>https://blog.gzhh.tech/read/</link>
      <pubDate>Mon, 06 Dec 2021 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/read/</guid>
      <description>阅读媒介 非技术书一半是微信读书，一半是 PDF，很小一部分是实体书；技术书主要是 PDF，少部分是微信阅读和纸质书。
微信读书通过 Mac 网页版和 iPad app 来阅读；PDF 通过 z-library 下载导入到 MarginNote 里来阅读。
PS：Kindle 已经很久没用上，经典反复看的会买纸质书；因为已经有了蛮多的纸质书，搬家不方便，后续估计不太会买纸质书。
阅读记录 2023 书名 标签 状态 媒介 方式 开始日期 结束日期 刀锋 小说 想读 善恶的彼岸 哲学 想读 NoSQL Distilled 计算机 想读 主题阅读 Unix/Linux
编程实践教程 计算机 想读 主题阅读 Linux/UNIX
系统编程手册 计算机 想读 PDF &amp;amp; 实体书 主题阅读 Unit Testing: Principles, Practices, and Patterns 计算机 想读 PDF 主题阅读 用Go语言自制
编译器 计算机 想读 微信阅读 主题阅读 用Go语言自制
解释器 计算机 想读 微信阅读 主题阅读 Programming</description>
    </item>
    
    <item>
      <title>使用 Golang 实现 worker pool</title>
      <link>https://blog.gzhh.tech/posts/implement-worker-pool-with-golang/</link>
      <pubDate>Wed, 08 Feb 2023 16:00:00 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/implement-worker-pool-with-golang/</guid>
      <description>介绍 Golang 中的 Channel 可以用来处理并发，下面我们就使用 Channel 来实现一个并发异步任务 worker pool。maxWorkers 是最大并发数，JobQueue 为待执行 job 队列。
实现 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;io&amp;#34; &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;strconv&amp;#34; &amp;#34;time&amp;#34; ) func jobHandler(w http.ResponseWriter, req *http.Request) { id, _ := strconv.Atoi(req.URL.Query().Get(&amp;#34;id&amp;#34;)) // handle async logic job := Job{ Handle: jobRunHandler, ID: id, } JobQueue &amp;lt;- job io.WriteString(w, &amp;#34;do job ok!\n&amp;#34;) } func jobRunHandler(params HandleParams) { time.Sleep(time.Second * 3) fmt.Printf(&amp;#34;job %d executed \n\n&amp;#34;, params.ID) } func main() { // init worker pool Setup() http.</description>
    </item>
    
    <item>
      <title>2023新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2023/</link>
      <pubDate>Sat, 28 Jan 2023 23:59:30 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2023/</guid>
      <description></description>
    </item>
    
    <item>
      <title>1984</title>
      <link>https://blog.gzhh.tech/reads/okr/</link>
      <pubDate>Sun, 06 Nov 2022 20:00:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/okr/</guid>
      <description>OKR 解释 目标与关键结果 Objectives and key results，OKR
OKR 是一套明确和跟踪目标及其完成情况的管理工具和方法；OKR包含一个目标（一个明确定义的目标）和3至5个关键结果（用于跟踪该目标实现情况的特定措施）。OKR的目标是定义如何通过具体和可衡量的行动来实现目标。关键结果的度量单位可以是0–100%，或任何数字单位。
参考 OKR工作法 What is OKR</description>
    </item>
    
    <item>
      <title>使用 Hugo 和 Github Actions 部署静态网站</title>
      <link>https://blog.gzhh.tech/posts/deploy-static-site-with-hugo-and-github-actions/</link>
      <pubDate>Sat, 17 Sep 2022 02:43:00 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/deploy-static-site-with-hugo-and-github-actions/</guid>
      <description>Table Of Contents 说在前面 博客搭建 首先跟着 Hugo 官方教程一步步操作 再将静态内容发布到 Github Page 使用 Github Action 优化部署 将本地博客项目同步到远程 Github 仓库 新建 workflow 配置域名及域名解析 博客图片 博客评论 参考 说在前面 年初将自己个人博客的部署方式改为 Github Actions 自动部署，其中碰到的坑一直没有空整理成文章输出出来，今天统一将内容整理到这篇文章。
写之前顺便提下自己写技术博客的历程吧，最开始写博客的时候差不多是在大二的样子，当时主要是在 CSDN 上面写，内容差不多都是记录总结学习各个技术栈碰到的坑；后来大三快出来实习的时候，买了台阿里云的低配 ECS，使用 Wordpress 将自己的个人博客部署在上面；再后来觉得 Wordpress 需要数据库存储内容、且不太好能结合 Markdown 写博客、还有没有太好看的主题等原因，然后就换成在 Jekyll 和 Hexo 对比中选择了后者；Hexo 还是部署在阿里云的，部署方式是通过在 ECS 上搭建 Git 仓库，通过 Git 钩子将 Hexo 生成的博客静态页面文件，推送到 Nginx 服务的托管目录，完成部署。
到了去年年底，用了几年的阿里云 ECS 到期了，由于续费太贵就没续费，于是就买了腾讯云的 Lighthouse 服务器，打算把博客也迁移过来。但是之前使用 Hexo 的那套部署方式比较麻烦，所以搜索了一番就决定使用 Hugo 和 Github Page 来部署静态博客。
博客搭建 首先跟着 Hugo 官方教程一步步操作 Hugo quick-start</description>
    </item>
    
    <item>
      <title>叫魂</title>
      <link>https://blog.gzhh.tech/reads/soulstealers/</link>
      <pubDate>Tue, 30 Aug 2022 22:18:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/soulstealers/</guid>
      <description>评价 由小窥大的讲述了一个历史事件（即乾隆年间席卷多个省的叫魂事件）的发生及其背后涉及到的种种因素，历史资料的引用也非常详细。
最后总结为对专制社会下最高统治者、官僚及普通平民三者如何并存的思考。</description>
    </item>
    
    <item>
      <title>非暴力沟通</title>
      <link>https://blog.gzhh.tech/reads/nonviolent-communication/</link>
      <pubDate>Tue, 30 Aug 2022 22:18:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/nonviolent-communication/</guid>
      <description>第一章 非暴力沟通四要素：
观察
感受
需求
请求
非暴力沟通例子：
我看到客厅很乱，我不是很喜欢这样，我希望可能能经常保持清洁，你能帮我收拾一下吗
非暴力沟通适用场景：
工作、生活、交流等很多场景
第二章 是什么蒙蔽了爱 1.道德批判
将自己的意志强加给别人
2.进行比较
3.回避责任
我不得不的借口&amp;hellip;
4.强人所难</description>
    </item>
    
    <item>
      <title>【阅读笔记】Understanding Distributed Systems</title>
      <link>https://blog.gzhh.tech/posts/understanding-distributed-systems/</link>
      <pubDate>Mon, 15 Aug 2022 00:30:07 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/understanding-distributed-systems/</guid>
      <description>Table Of Contents 1. Introduction Part I: Communication 2. Reliable links 3. Secure links 4. Discovery 5. APIs Part II: Coordination 8. Time 9. Leader election 10. Replication 11. Coordination avoidance 12 . Transactions 13. Asynchronous transactions Part III: Scalability 14. HTTP caching 15. Content delivery networks 16. Partitioning 17. File storage 18. Network load balancing 19. Data storage 20. Caching 21. Microservices 22. Control planes and data planes 23.</description>
    </item>
    
    <item>
      <title>【阅读笔记】The Effective Engineer</title>
      <link>https://blog.gzhh.tech/posts/the-effective-engineer/</link>
      <pubDate>Sat, 16 Jul 2022 18:30:07 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-effective-engineer/</guid>
      <description>Table Of Contents Part 1: Adopt the Right Mindsets 1. Focus on High-Leverage Activities 2. Optimize for Learning 3. Prioritize Regularly Part 2: Execute, Execute, Execute 4. Invest in Iteration Speed 5. Measure What You Want to Improve 6. Validate Your Ideas Early and Often 7. Improve Your Project Estimation Skills Part 3: Build Long-Term Value 8. Balance Quality with Pragmatism 9. Minimize Operational Burden 10. Invest in Your Team’s Growth Reference Part 1: Adopt the Right Mindsets 1.</description>
    </item>
    
    <item>
      <title>【阅读笔记】微服务架构设计模式</title>
      <link>https://blog.gzhh.tech/posts/microservices-patterns/</link>
      <pubDate>Mon, 20 Jun 2022 17:58:50 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/microservices-patterns/</guid>
      <description>Table Of Contents 一、系统架构设计介绍 单体架构 微服务架构 二、服务的拆分策略 拆分规范 拆分策略 拆分难点 三、微服务架构中的进程间通信 RPC（同步通信机制） 同步通信机制局部故障问题 服务发现 消息代理 MQ（异步消息通信机制） 四、管理事务 Saga 五、微服务架构中的业务逻辑设计 业务逻辑组织模式 领域驱动设计 DDD 六、使用事件溯源开发业务逻辑 七、在微服务架构中实现查询 使用API组合模式进行查询 使用CQRS模式 八、外部API模式 九 &amp;amp; 十、微服务架构中的测试策略 自动化测试的四个阶段 测试的不同类型 测试金字塔 使用测试象限进行分类 十一、开发面向生产环境的微服务应用 安全性 可配置 设计可观测的服务 使用微服务基底模式开发服务 服务网格 十二：部署微服务应用 虚拟机 docker k8s 容器部署 Serverless 部署 十三、微服务架构的重构策略 需要考虑的问题 重构策略 设计服务与单体的协作方式 将新功能实现为服务 从单体中提取功能到独立服务 参考 一、系统架构设计介绍 单体架构 定义：一个系统的所有子模块都被部署在同一台服务器上。
单体架构的好处
应用的开发简单 易于对应用程序进行大规模的更改 测试相对简单直观 部署简单 横向扩展容易 单体地狱
随着不断的在单体架构的基础上扩展，每一次实现更多功能的时候，就会导致代码库膨胀。并且随着研发团队规模的不断壮大，团队的管理成本也不断提高，开发变得缓慢和痛苦。
单体架构的弊端
过度的复杂性会吓退开发者 开发速度缓慢 从代码提交到实际部署的周期很长，而且容易出问题 难以扩展 交付可靠的单体应用是一项挑战 需要长期依赖某个可能过时的技术栈 微服务架构 定义：将一个单体应用按照不同的功能模块进行分解，拆分成一个个小的服务，每个服务实现了一组相关的功能。</description>
    </item>
    
    <item>
      <title>小狗钱钱</title>
      <link>https://blog.gzhh.tech/reads/xiao-gou-qian-qian/</link>
      <pubDate>Thu, 13 Jan 2022 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/xiao-gou-qian-qian/</guid>
      <description> 总结 每日记录成功日记，培养自信心 订好梦想，并持之以恒为之努力 养好下金蛋的鹅，把鹅养大，靠蛋生活 </description>
    </item>
    
    <item>
      <title>中国近代史</title>
      <link>https://blog.gzhh.tech/reads/the-rise-of-modern-china/</link>
      <pubDate>Mon, 03 Jan 2022 20:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/the-rise-of-modern-china/</guid>
      <description> 第一编1600-1800 明末-康雍乾盛世
第二编1800-1864 第一、第二次鸦片战争及太平天国、捻军、回民内乱
近代中国的历史可以被视为一步名族主义革命的历史 中国的名族主义，迷惑正常中国人，使其不能正视自己和未来 忠王李秀成自述 https://zh.wikipedia.org/wiki/李秀成自述 第三编1861-1895 恭亲王和李鸿章领导的洋务运动
第四编1898-1912 改革与革命
康梁戊戌变法-保皇派 孙中山领导革命-革命派 第五编1917-1945 主义与抗战
思想抗战 1917-1923 国民政府：挑战重重的十年 1928-1937 第六编 中华人民共和国的兴起
反右 十年文革 学运 中美关系 总结 维护统治地位为第一目的，其他都可抛弃 和平时代的爱国主义是毒瘤，战争时期的爱国主义是良药 </description>
    </item>
    
    <item>
      <title>2022新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2022/</link>
      <pubDate>Fri, 31 Dec 2021 23:55:50 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2022/</guid>
      <description></description>
    </item>
    
    <item>
      <title>学习之道</title>
      <link>https://blog.gzhh.tech/reads/a-mind-for-numbers/</link>
      <pubDate>Sat, 18 Dec 2021 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/a-mind-for-numbers/</guid>
      <description>1. 思考的两种模式 专注模式（类似于思考快与慢中的慢思维）
专注于某个问题的解决，不一定要有结果。 发散模式（类似于思考快与慢中的快思维）
从不同的角度去思考问题 专注模式是左脑主导，发散模式是右脑主导。
2. 两种模式之间的切换 模式切换
当遇到难题时，专注模式无法解决时，可以通过切换到发散模式来从不同角度尝试寻找解决问题的方法。 模式间切换好处 对问题的理解更加深刻 可以学习到新的知识 发散模式有利于获得新能量，然后再继续投入到专注模式中 需要根据实际情况，规划适合自己的学习计划，欲速则不达 模式切换的好方法 番茄工作法（一般专注25分钟，发散5分钟） 避开思维定式
碰到难题一时无法解决时，不要专注深陷其中，学会切换到发散模式从不同的角度寻找解决问题的方法
做不同事情从专注切换到发散的时间应合理控制
失败也是必不可少的一步
工作记忆和长期记忆
长期记忆是不间断的工作记忆进化而来的
睡眠
睡眠是记忆和学习的重要一环，充足的睡眠对解决难题和理解知识很有帮助
3. 组块学习 难题按组进行拆分 可以不同组问题之间穿插思考解决 构建组块的必要条件 专注 对知识的理解，便于拆分 不断的练习 4. 拖延 介绍
拖延症的危害，会压缩思考的时间，影响学习的效率及结果
贪图一时之快对长期并不有利 拖延是慢性毒药，长期危害很大 深入理解拖延
拖延习惯
信号 - 不同的信号会诱发拖延 反应程序 奖励机制 信念 改变习惯
改变对信号的反应或回避对信号的反应 理解习惯
尽量避免坏习惯的条件（减少适用男意志力）
专注过程，不要专注于后果
分解工作量，不要过多，制定好计划
应对拖延症的方法
任务列 TODO 列表 分解任务 每日任务计划及完成结果 &amp;hellip;
5. 记忆技巧 图片记忆法 故事记忆法 &amp;hellip;
6. 学习方法 输出式学习 自学，独立思考者 &amp;hellip;</description>
    </item>
    
    <item>
      <title>思考，快与慢</title>
      <link>https://blog.gzhh.tech/reads/thinking-fast-and-slow/</link>
      <pubDate>Sat, 27 Nov 2021 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/thinking-fast-and-slow/</guid>
      <description>总结 一、两种系统：系统1和系统2
系统1：无意识的思考模式（直觉）
系统2：有主动意识的思考模式思考过后所做的决定（但大多数时候会受到系统1的影响）
二、系统1启发，系统2调整
三、系统1会带来错觉，系统2需要改正
长期在有迹可循的环境中训练，会让系统1习得技能
四、选择和风险
在金融领域的体现尤为明显
五、思考什么是幸福
专注做一件事能提升幸福感
逻辑思维书单 1 思考：快与慢
2 真相与错觉
3 知识的错觉
4 错误的行为+助推
5 笛卡尔的错误：情绪
6 推理和大脑
7 非暴力沟通
8 故事经济学
9 一本小小的蓝色逻辑书
10 不管教的勇气
11 正面管教
12 自卑与超越
13 精进2：解锁万物的心智进化方法
14 第三种选择
一个标准：
国内的尽量不看比如精进1/2（或者简单翻阅）
用弗洛伊德精神分析谈心理学的可以不看（荣格除外），国外出版的偏厚的书选择看前面几章（因为都是同一个道理用不同例子来讲）
参考 执行力
PDCA</description>
    </item>
    
    <item>
      <title>Gin 生命周期</title>
      <link>https://blog.gzhh.tech/posts/lifecycle-of-gin-framework/</link>
      <pubDate>Mon, 05 Jul 2021 17:38:50 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/lifecycle-of-gin-framework/</guid>
      <description></description>
    </item>
    
    <item>
      <title>如何阅读一本书</title>
      <link>https://blog.gzhh.tech/reads/how-to-read-a-book/</link>
      <pubDate>Sat, 06 Mar 2021 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/how-to-read-a-book/</guid>
      <description>一、阅读方式 阅读层次 基础阅读 检视阅读 分析阅读 主题阅读 较高层次的阅读包含较低层次的阅读
关于一本书阅读前需要提出的问题 整体来说，这本书到底在谈些什么 作者细说了什么，怎么说的 这本书说得有道理吗？ 这本书跟你有什么关系 阅读技巧、阅读习惯 连贯性，尽量不要打断阅读的连贯性
做笔记技巧 在书的空白页做笔记
检视阅读时做结构笔记（什么书、书在说什么、书的大体结构）
概念笔记（细节笔记）
辩证笔记 （参考几本书总结出来的）
阅读总结 懂得阅读方法的人，文学品味都很高
辅助阅读 手册 阅读工具 字典 百科全书 分析阅读 一、分析阅读的第一阶段：找出一本书在谈些什么的规则（整理内容大纲）
通过阅读书名、作者介绍、摘要、序言、目录等
（1）依照书的种类与主题来分类。
（2）使用最简短的文字说明整本书在谈些什么。
（3）将主要部分按顺序与关联性列举出来。将全书的大纲列举出来，并将各个部分的大纲也列出来。
（4）确定作者想要解决的问题。
二、分析阅读的第二阶段：诠释一本书的内容规则（诠释内容）
（5）诠释作者的关键字，与他达成共识。
（6）由最重要的句子中，抓住作者的重要主旨。
（7）知道作者的论述是什么，从内容中找出相关的句子，再重新架构出来。
（8）确定作者已经解决了哪些问题，还有哪些是没解决的。再判断哪些是作者知道他没解
三、分析阅读的第三阶段：像是沟通知识一样地评论一本书的规则
A．智慧礼节的一般规则
（9）除非你已经完成大纲架构，也能诠释整本书了，否则不要轻易批评。（在你说出：“我读懂了!”之前，不要说你同意、不同意或暂缓评论。）
（10）不要争强好胜，非辩到底不可。
（11）在说出评论之前，你要能证明自己区别得出真正的知识与个人观点的不同。
B．批评观点的特别标准
（12）证明作者的知识不足。
（13）证明作者的知识错误。
（14）证明作者不合逻辑。
（15）证明作者的分析与理由是不完整的。
注意：关于最后这四点，前三点是表示不同意见的准则，如果你无法提出相关的佐证，就必须同意作者的说法，或至少一部分说法。你只能因为最后一点理由，对这本书暂缓评论。
PS:
再强调一次，这些分析阅读的规则是一个理想化的阅读。没有多少人用过这样的方法来阅读一本书。而使用过这些方法的人，可能也没办法用这些规则来阅读许多本书。无论如何，这些规则只是衡量阅读层次的理想标准。你是个好读者，也就能达到你应该达到的阅读层次。
提醒你，运用本书所提供的规则，仔细地阅读一本书，而不是浮面地阅读大量的书，就是一个好读者能达到的理想境界了。当然，许多书都值得精读。但有更多的书只要浏览一下就行了。要成为一个好读者，就要懂得依照一本书的特质，运用不同的阅读技巧来阅读。
二、阅读不同读物的方法 如何阅读实用性读物 类型
就像本书一样，或是烹饪书、驾驶指南，基本上都是在说明规则的。这类书很少有伟大的作品。无论其中谈论到什么问题，都是为了说明规则而来的。
这类实用书的论述都是在向你表示：它们所说的规则都是确切可行的。作者可能会用原理来说明这些规则的可信度，或是告诉你一些实例，证明这些规则是可行的。看看这两种论述，诉诸原理的论述通常比较没有说服力，但却有一个好处。比起举实例的方法，诉诸原理的论述比较能将规则的理由说明得清楚一些。
主要是在阐述形成规则的原理。许多伟大的经济、政治、道德巨著就属于这一类。
这种实用性书中，主要谈的是规则背后的原理。当然，其中的主旨与论述看起来就跟纯理论性的书一模一样。其中的主旨是在说明某件事的状态，而论述就是在强调真的是如此。
如何阅读想象文学 小说、戏剧、诗集等类型书籍的阅读方法：
首先，我们可以将架构性的规则——拟大纲的规则——改变为适合阅读小说的规则： 其次，阅读小说时候的诠释规则是什么？ 小说的阅读批评规则是什么？ 参考：
对于小说，我们不该反对或赞成，而是喜欢或不喜欢。
《小说的艺术》
阅读不同类书的建议</description>
    </item>
    
    <item>
      <title>2021新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2021/</link>
      <pubDate>Fri, 01 Jan 2021 01:10:50 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>1984</title>
      <link>https://blog.gzhh.tech/reads/1984/</link>
      <pubDate>Sat, 05 Dec 2020 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/1984/</guid>
      <description>内容 标签：极权主义
角色：温斯顿、裘莉亚、奥勃良
国家：大洋国、欧亚国、东亚国
相关部门：
真理部（新闻、娱乐、教育、艺术）
和平部（战争）
友爱部（维持法律和秩序）
富裕部（经济财务）
相关标语：
老大哥正在看着你
战争即和平、自由即奴役、无知即力量
谁控制过去就控制未来，谁控制现在就控制过去
相关思想：
所谓自由就是可以说二加二等于四的自由，承认这一点其他一起就迎刃而解
上等人的目标是要保持他们的地位；当中等人想推翻上等人时，他们就会用民主来欺骗下等人；三等人中只有下等人从来没有实现过自己的目标
一个人通过使另一个人受苦来发挥他的权利
核心思想：
统治阶级的唯一在乎的就是权利
整本书大致分为三个主题：第一部的蛰伏、第二部的反抗和第三部的信仰崩塌，全书的高潮大致就是在第二部第九节温斯顿读果尔德施坦因的那本书开始的，再到后面温斯顿被抓后与奥勃良的审判谈话主题进一步升华，看完后心里久久不能平静。
书中独特的观点有很多，我就摘抄其中一个观点出来吧：所谓权利就是一个人使另一个人受苦来发挥他的权利。
三种人 有史以来，大概自从新石器时代结束以来，世上就有三种人，即上等人、中等人、下等人。他们又再进一步分为好几种，有各种各样不同的名字，他们的相对人数和他们的相互态度因时代而异；但是社会的基本结构不变。即使在发生了大动荡和似乎无法挽回的变化以后，总又恢复原来的格局，好象陀螺仪总会恢复平衡一样，不管你把它朝哪个方向推着转。这三种人的目标是完全不可调和的。上等人的目标是要保持他们的地位。中等人的目标是要同高等人交换地位。下等人的特点始终是，他们劳苦之余无暇旁顾，偶而才顾到日常生活以外的事，因此他们如果有目标的话，无非是取消一切差别，建立一个人人平等的社会。这样，在历史上始终存在着一场一而再再而三发生的斗争，其大致轮廓相同。
在很长时期里，上等人的权力似乎颇为巩固，但迟早总有这样一个时候，他们对自已丧失了信心，或者对他们进行有效统治的能力丧失了信心，或者对两者都丧失了信心。他们就被中等人所推翻，因为中等人标榜自己为自由和正义而奋斗，把下等人争取到自己一边来。中等人一旦达到目的就把下等人重又推回到原来的被奴役地位，自己变成了上等人。不久，其他两等人中有一等人，或者两等人都分裂出一批新的中等人来，这场斗争就周而复始。
三等人中只有下等人从来没有实现过自己的目标，哪怕是暂时实现自己的目标。若说整个历史从来没有物质方面的进步，那不免言之过甚。即使在今天这个衰亡时期，一般人在物质上也要比几百年前好一些。但是不论财富的增长，或态度的缓和，或改革和革命，都没有使人类接 等一步。从下等人的观点来看，历史若有变化，大不了是主子名字改变而已。
中等人只要还在争取权力的时候，总是利用自由、正义、博爱这种好听的字眼，诱使下等人支持他们的事业。要建立一个公正和平的社会实际上是不可能的，但这种社会却是比较容易使人相信。好几千年以来人类梦寐以求的，就是实现一个人人友爱相处的人间天堂，既没有法律，也没有畜生一般的劳动。有些人纵使在每一次历史变化中都能得到实际好处，这种幻想也对他们有一定的吸引力。</description>
    </item>
    
    <item>
      <title>富爸爸，穷爸爸</title>
      <link>https://blog.gzhh.tech/reads/rich-dad-poor-dad/</link>
      <pubDate>Sat, 12 Sep 2020 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/rich-dad-poor-dad/</guid>
      <description>随记 拥有两位我深爱的父亲，这促使我去思考，最终为自己选择其中一种思维方式。这一过程是我自己去选择而不是简单地接受或否定的过程，在后来的漫长岁月中被证明对我非常有益。
我的一个爸爸总是习惯说“我可付不起”，而另一个爸爸则禁止我们说这样的话，他坚持让我这样说：“我怎样才能付得起？”这两句话，一句是陈述句，另一句是疑问句。一句让你放弃，而另一句则促使你去想办法。我那个在不久之后就富起来的爸爸解释，当你下意识地说出“我付不起”的时候，你的大脑就会停止思考；而如果你自问“我怎样才能付得起”，则会让你的大脑动起来。当然，他的意思并不是让你把每件想要的东西都买到手，这里只是强调要不停地锻炼你的大脑——它是世界上最强大的“计算机”。富爸爸说：“我的大脑越用越活，大脑越活，我挣的钱就越多。”他认为，下意识地说“我可付不起”意味着精神上的懒惰。
贫穷和破产的区别是：破产是暂时的，而贫穷是永久的。
我要让钱为我工作
第一课 富人不为钱工作 生活推着我们所有的人，有些人放弃了，有些人在抗争。少数人学会了这门课程，取得了进步，他们欢迎生活来推动他们，对他们来说，这种推动意味着他们需要并愿意去学习一些东西。他们学习，然后取得进步。但大多数人放弃了，还有一部分人像你一样在抗争。
改变你能改变的
生活中的很多事情是我们无法控制的。我学会了专注于我所能控制的：我自己。如果事情必须改变，首先要改变的就是我自己
很多人说“我对钱没兴趣”，可他们却每天工作8小时。
当情感占据上风时，理智就会下降。
第二课 为什么要教授财务知识 资产是能把钱放进我口袋里的东西。负债是把钱从我口袋里取走的东西。
富人买入资产。 穷人只有支出。 中产阶级购买自以为是资产的负债。 很多人仍然相信他们的房子就是资产。但罗伯特教育他们说房子是负债，因为它把钱从你的口袋里拿走了——不仅仅因为那些伴随着房子的税收和支出，更因为房子的贬值和你把所有的钱都投在房子上后丢失的致富的机会，这也导致了你失去了学习投资经验的机会。房子是负债，因为它把钱从你的口袋里拿走了
这并不表示你不能购买一个大一点的房子，而是首先要购买资产，以确保它所创造的现金流能支付你的房子。当你有足够的资产能产生大于支出的收入时，剩余的收入还可以对资产项进行再投资。这样，你的资产负债表上的资产项会不断增加，收入也会随之增加。结果便是能够分清资产和负债的富人变得更富。
很多人仍然相信他们的房子就是资产。但罗伯特教育他们说房子是负债，因为它把钱从你的口袋里拿走了——不仅仅因为那些伴随着房子的税收和支出，更因为房子的贬值和你把所有的钱都投在房子上后丢失的致富的机会，这也导致了你失去了学习投资经验的机会。
巴克敏斯特·富勒的定义：“财富就是支撑一个人生存多长时间的能力，或者说，如果我今天停止工作，我还能活多久？”
第三课 关注自己的事业 职业和事业
职业：从事与专业相关的工作
事业：处理资产项相关的投资
对成年人而言，把支出保持在低水平、减少借款并勤劳地工作会帮你打下一个稳固的资产基础。
资产可以分为以下几类：
●股票●债券●能够产生收入的房地产●票据（借据）●版税，如音乐、手稿、专利●其他任何有价值、可产生收入或有增值潜力并且有很好销路的东西
开始关注你自己的事业，在继续工作的同时购买一些房地产，而不要买负债。
第四课 税收的历史和公司的力量 原本本没有税，现在中产阶级在承担着沉重的税负
财商是由4个方面的专门知识构成的：
1．会计
会计就是财务知识或解读数字的能力。
2．投资
投资是钱生钱的科学。投资涉及策略和方案，这要右脑来做，是属于创造的部分。
3．了解市场
了解市场是供给与需求的科学。
4．法律
利用一个具有会计、投资和市场运营的企业会使你的财富实现爆炸性地增长。
第五课 富人的投资 有许多东西比好成绩更为重要，人们称之为“魄力”“勇气”“毅力”“胆量”“气势”“精明”“勇敢”“坚强”“才华横溢”
我们唯一的，也是最重要的资产是我们的头脑。如果受到良好的训练，它就能创造大量的财富
简单的数学计算和一般常识是有效理财所需要的一切
1．激励人们学习更多的知识。
2．告诉人们如果打好基础，将来的道路就会平坦很多。
3．告诉人们每个人都能获得巨大的财富。
4．告诉人们条条大路通罗马。
5．告诉人们财务知识并不深奥。
“保险”的投资常常过于安全，太安全则会导致低收益
风险总是无处不在，要学会驾驭风险，而别总想回避风险。
好机会是用你的脑子而不是用你的眼睛看到的。
投资者分为两类：
1．第一类也是最普遍的一类，即进行一揽子投资的人，
2．第二类是自己创造投资机会的投资者，但有时可能要花许多年才能将众多“零部件”组织起来，有时它们根本就不可能组合在一起。
要成为理财方面的天才既需要专业知识，又需要足够的勇气。试着去冒险，要勇敢，让你的才华把恐惧转变成力量和智慧。
第六课 学会不为钱工作 如“学习金字塔”理论所述，小组讨论是有效学习的好方法之一。
成功所必需的管理技能包括：
（1）现金流管理；
（2）系统管理；
（3）人员管理。
最重要的专业技能是销售技能和营销技能。
沟通能力，如书面表达、口头表达及谈判能力等对一个人的成功来说更是至关重要。</description>
    </item>
    
    <item>
      <title>邓小平时代</title>
      <link>https://blog.gzhh.tech/reads/dengxiaoping-and-the-transformation-of-china/</link>
      <pubDate>Thu, 10 Sep 2020 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/dengxiaoping-and-the-transformation-of-china/</guid>
      <description>时间线 革命初期 1920-1927 - 法国和苏联
地下党时期 1927-1930 - 负责上海中国地下党；养成凭记忆记录习惯
根据地时期 1930-1937 - 参与江西、长征、西北根据地相关事务；拥护毛
抗战时期 1937-1945
内战时期 1945-1949 - 刘邓大别山；战略地位，但军事上损失大，且效果不大
建国初期 1949-1966 - 参与建设，但是没有尽力阻止毛的一些错误；偏刘被拉下水
1969-1971 - 下放江西，安全被保证，直到林彪出事后一段时间，开始被毛内定接班人
1972.01-1973.4 - 缓慢复出，开始处理外交和一些政务
1973.12 - 1975.12 - 开始接手工作，并作出一些改革，并被毛当作继承人培养，后期由于没有公开场合拥护文革，而逐渐被毛疏远；邓坚决不公开场合承认文革的最大原因是因为如果承认了，后期如果再当权就绝没有那么大的威望，改革时也会有落一些反对派的口实；
1976 - 受冷落，呆在北京的家中，不参与斗争，不落把柄，等待机会
1977-1980 - 复出，掌权，主攻军事（苏联、越南）、外交（日本、美国、欧洲）、教育、经济
1978-1989 - 集权，经济方面：广东福建经济特区，统一方面：台湾、香港、西藏问题，军事方面：裁军
1989-1992 - 北京之春1989、加速经济的南方会谈1992
邓小平的领导班子（初期 - 1987）：改革派[胡耀邦、赵紫阳、万里]、保守派[邓力群、胡乔木]
邓小平的领导班子（中期 - 1989）：改革派[赵紫阳、李鹏]
邓小平的领导班子（后期 1989 - ）：改革派[江泽民、李鹏]
相关人物 江青：毛某些思想的忠实执行者，但当做的越界时，会被毛约束；被评价为毛忠实的狗
王洪文：缺少老人支持，开始被毛指定为接班人，后毛认为他过于听江青的话，后面就不在被当作接班人培养
华国锋：当王洪文、邓小平被不在当作接班人培养时，中层领导、资历不高的华国锋被毛跃层提拔，毛认为他是自己思想的忠实执行者；由于不会做过于激进的决定，所以被选上，且有老人华国锋等人的支持，但是1976年毛死后上位后，为巩固自己的地位，延迟了一段时间对邓的重用
叶剑英：军队派系资深领导人、前期拥护华国锋
相关线索 毛让继承者公开场合承认文革，是不想继任者在他死后推翻他，如果公开承认了，那么继承者就不会公开推翻他，所以在邓迟迟没有拥护文革后的一段时间，逐渐不信任邓</description>
    </item>
    
    <item>
      <title>理解 Go 函数中的切片传参</title>
      <link>https://blog.gzhh.tech/posts/understand-slice-param-in-go-function/</link>
      <pubDate>Fri, 19 Jun 2020 17:00:00 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/understand-slice-param-in-go-function/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MySQL 锁</title>
      <link>https://blog.gzhh.tech/posts/know_mysql_lock/</link>
      <pubDate>Sun, 23 Feb 2020 09:43:53 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/know_mysql_lock/</guid>
      <description>锁介绍 假设我们有一个商品表 item，里面有两个字段 id 和 store
+----+-------+ | id | store | +----+-------+ | 1 | 1 | +----+-------+ 一般我们在生成订单之前会先确定 store 商品库存是否大于你要购买的数量，然后更新库存
-- 查询 SELECT store FROM item WHERE id = 1; -- 更新 UPDATE item SET store = store - 1 WHERE id = 1; 但是这样在用户大量并发操作的时候会是不安全的，比如第一个用户 SELECT 到的 store 是 1，但是当他准备 UPDATE 的时候，可能已经有人把库存 store 扣成了 0，那么第一个用户再去 UPDATE 的时候，就可能出现负库存的情况，因此我们必须通过事务和锁机制来确保读取及提交的数据都是正确的。
在 MySQL 终端我们可以这样测试
SET AUTOCOMMIT=0; BEGIN; SELECT store FROM item WHERE id=1 FOR UPDATE; 此时 item 表中 id=1 的这行数据被锁住（InnoDB 的 Row Lock 或 Table Lock）其他事务必须等待此次事务提交后才能执行； SELECT store FROM item WHERE id=1 FOR UPDATE; 可以确保库存 store 在别的事务读取到的数字是正确的； 然后我们修改库存，提交数据写入数据库，item 表中 id=1 的这行数据解锁。</description>
    </item>
    
    <item>
      <title>西方哲学史（第9版）</title>
      <link>https://blog.gzhh.tech/reads/a-historical-survey-with-essential-readings/</link>
      <pubDate>Sun, 10 Nov 2019 16:38:52 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/reads/a-historical-survey-with-essential-readings/</guid>
      <description>古代哲学 希腊三哲：
苏格拉底 https://zh.wikipedia.org/wiki/苏格拉底
柏拉图 https://zh.wikipedia.org/wiki/柏拉图
亚里士多德 https://zh.wikipedia.org/wiki/亚里士多德
中世纪哲学 奥古斯丁 https://zh.wikipedia.org/wiki/希波的奥古斯丁
阿奎那 https://zh.wikipedia.org/wiki/托马斯·阿奎那
近代哲学 时期：文艺复兴后期 - 黑格尔或十九世纪上半叶
人文主义：
伊拉斯谟 https://zh.wikipedia.org/wiki/德西德里乌斯·伊拉斯谟
现实主义：
馬基雅維利 https://zh.wikipedia.org/wiki/馬基雅維利（近代政治学之父）
神学：
馬丁·路德 https://zh.wikipedia.org/wiki/馬丁·路德
十七世纪哲学（https://zh.wikipedia.org/wiki/巴洛克时期哲学）近代哲学的开端：
经验主义
培根 https://zh.wikipedia.org/wiki/弗兰西斯·培根
霍布斯 https://zh.wikipedia.org/wiki/托马斯·霍布斯
洛克 https://zh.wikipedia.org/wiki/约翰·洛克
唯理主义
笛卡尔 https://zh.wikipedia.org/wiki/勒内·笛卡尔 （西方现代哲学的奠基人）
斯宾诺莎 https://zh.wikipedia.org/wiki/巴魯赫·斯賓諾莎
莱布尼茨 https://zh.wikipedia.org/wiki/戈特弗里德·莱布尼茨
启蒙时代（17世纪后期至18世纪）：
伏爾泰 https://zh.wikipedia.org/wiki/伏爾泰
狄德罗 https://zh.wikipedia.org/wiki/德尼·狄德罗
卢梭 https://zh.wikipedia.org/wiki/让-雅克·卢梭
牛顿 https://zh.wikipedia.org/wiki/艾萨克·牛顿 (自然哲学)
孟德斯鸠 https://zh.wikipedia.org/wiki/孟德斯鸠 (政治哲学)
亚当·斯密 https://zh.wikipedia.org/wiki/亚当·斯密 (经济学)
休谟 https://zh.wikipedia.org/wiki/大卫·休谟 (经验主义)
康德 https://zh.wikipedia.org/wiki/伊曼努尔·康德 (德国唯心主义，继希腊三贤后西方影响力最大的哲学家)
后期
https://zh.wikipedia.org/wiki/格奥尔格·威廉·弗里德里希·黑格尔 (德国唯心主义)
当代哲学： 时期：十九世纪开始</description>
    </item>
    
    <item>
      <title>LaTeX 学习记录</title>
      <link>https://blog.gzhh.tech/posts/latex-usage-notes/</link>
      <pubDate>Sun, 20 Oct 2019 17:23:05 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/latex-usage-notes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lua 语言入门（二）</title>
      <link>https://blog.gzhh.tech/posts/play-lua-second/</link>
      <pubDate>Sun, 06 Oct 2019 09:22:54 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/play-lua-second/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lua 语言入门（一）</title>
      <link>https://blog.gzhh.tech/posts/play-lua-first/</link>
      <pubDate>Sun, 29 Sep 2019 20:20:36 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/play-lua-first/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【操作系统】3.内存memory(抽象的地址空间)</title>
      <link>https://blog.gzhh.tech/posts/operating-system-3.memory/</link>
      <pubDate>Mon, 11 Mar 2019 01:08:00 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/operating-system-3.memory/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【操作系统】2.调度scheduling</title>
      <link>https://blog.gzhh.tech/posts/operating-system-2.scheduling/</link>
      <pubDate>Wed, 27 Feb 2019 16:37:33 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/operating-system-2.scheduling/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【操作系统】1.进程process</title>
      <link>https://blog.gzhh.tech/posts/operating-system-1.process/</link>
      <pubDate>Mon, 25 Feb 2019 23:00:39 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/operating-system-1.process/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【操作系统】基础概念介绍</title>
      <link>https://blog.gzhh.tech/posts/operating-system-0.basic-info/</link>
      <pubDate>Sat, 23 Feb 2019 09:43:53 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/operating-system-0.basic-info/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2019新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2019/</link>
      <pubDate>Tue, 01 Jan 2019 22:10:51 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2019/</guid>
      <description></description>
    </item>
    
    <item>
      <title>对于如何提升能力的一些思考</title>
      <link>https://blog.gzhh.tech/posts/how-to-improve-yourself/</link>
      <pubDate>Thu, 06 Sep 2018 00:53:07 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/how-to-improve-yourself/</guid>
      <description>&lt;p&gt;如何在技术快速发展的时代成为逐浪者？随着接触越来越多的新技术新名词，内心就越会感觉到知识的空虚，恨不得一下子就多学一门新技术，但是对每个技术都是浅尝即止，很难深入．最近思来想去只能把问题集中在基础不扎实上．如果技术扎实，那么在尝试新技术的时候心里底气就会足一点，学起来也就不会那么吃力了．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSO 单点登录</title>
      <link>https://blog.gzhh.tech/posts/sso/</link>
      <pubDate>Sun, 01 Apr 2018 23:24:03 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/sso/</guid>
      <description>说在前面 由于公司要开发几套系统，并且需要几套系统使用统一的用户管理功能，TM让我研究如何实现多系统的单点登录，这周零零碎碎研究了下，所以写下这篇文章，加深下理解，也方便以后回顾。
介绍 Single sign-on(SSO) 是多个相关但彼此独立的软件系统访问控制的一个属性，也就是用户只使用一个账号和密码来访问多个系统。 单点登录在大型的系统中经常用到，例如：刚开始你的百度搜索 www.baidu.com 和百度云盘都是没有登录的，现在当你登录了百度搜索的系统后，再去刷新一下百度云盘的系统时，这时你会发现百度云盘这边也是显示登录的，这种情况就是使用 SSO 技术实现的。 CAS(Central Authentication Service) 旨在为 Web 应用系统提供一种可靠的单点登录解决方法（属于 Web SSO ）。
HTTP 知识介绍 由于 HTTP 是无状态的协议，所以我们需要使用某些机制来保存web用户浏览的状态。Cookie 和 Session 都是用来保存web状态的两种技术，区别是 Cookie 是在客户端来保存用户状态，Session 是在服务端来保存用户状态。
SSO 的几种情况 1.同域下的不同服务 例如我们有两个服务 test.com/site1 test.com/site2 这是最简单的一种情况(不过一般大型系统会用域来区分两个服务)，两个服务共享一个主机地址，且在同一个域下。这种情况下两个业务共享一 个 Cookie 和 Session，所以不用做特别的处理，按照常规的验证方式即可，当你在 site1 上登录了，在 site2 上自然而然也是登录的。
2.同父域不同子域的服务 例如 site1.x.com site2.x.com 这种情况两个服务的主机是不相同的(父域相同，子域不同)，这种情况我们一般可以设置两个服务的 Cookie 都是在当前域的顶级域下的，也就是 x.com 域下。 cas.x.com 设置一个 CAS(Central Authentication Service)，所有的与登录和验证token和设置 Cookie 的 操作我们都放在 CAS 上面
3.完全不同域的服务 例如 site1.com site2.com</description>
    </item>
    
    <item>
      <title>常见排序算法</title>
      <link>https://blog.gzhh.tech/posts/sort-algorithm/</link>
      <pubDate>Sun, 01 Apr 2018 23:24:03 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/sort-algorithm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>【VIM】vim常用操作</title>
      <link>https://blog.gzhh.tech/posts/vim-skill/</link>
      <pubDate>Fri, 23 Mar 2018 09:22:30 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/vim-skill/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2018新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2018/</link>
      <pubDate>Mon, 01 Jan 2018 00:43:02 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2018/</guid>
      <description>&lt;p&gt;2018要来了，回想2017年出校门实习的这半年来，学到了挺多职场的知识，但是对自己还是不够满意，比自己的期望也低了好多，而且人也变得懒惰了，希望2018能改掉这些毛病，努力争取获取的一个更好的机会。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>玩转sed操作文本-基础篇</title>
      <link>https://blog.gzhh.tech/posts/play-sed-first/</link>
      <pubDate>Fri, 17 Nov 2017 18:42:35 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/play-sed-first/</guid>
      <description>介绍 sed 全名是 stream editor，是文本流处理方面的强大工具，和另一个文本处理工具 awk 工具有的一比，接下来就让我们简单介绍下它的基本使用和适用场景。 我们这篇主要讲的是 Gnu sed，还有一个常用的是 BSD sed（Mac OS就是源自 BSD 的），两者略微有点不同，不过他们俩都是由 Posix sed 演化而来。
基本格式 sed 命令的执行有两种基本格式 sed [-参数] command [file &amp;hellip;] sed [-参数] [-e command] [-f command_file] [-i extension]
参数 默认情况下，sed 不会操作原来的文本，加上 -i 参数则会改变原文件的内容 sed -i command [file &amp;hellip;]
替换 1.将文件中每行所有的字符 , 都替换为空字符(不加 g 标记则只替换每行第一个匹配) sed &#39;s/,/ /g&#39; file.txt 2.从第 N 处匹配开始替换 /ng sed &#39;s/,/ /2g&#39; file.txt 3.将字符 , 替换为空字符并保存替换后的内容 sed -i &#39;s/,/ /g&#39; file.</description>
    </item>
    
    <item>
      <title>2017新年计划</title>
      <link>https://blog.gzhh.tech/posts/the-purpose-of-2017/</link>
      <pubDate>Sun, 01 Jan 2017 23:26:25 +0800</pubDate>
      
      <guid>https://blog.gzhh.tech/posts/the-purpose-of-2017/</guid>
      <description>&lt;p&gt;今天是2017年的第一天，度过了有很过欢笑也有很多悲伤的2016年，不管怎样，2016年都过去了，新生活还要继续，写点新年的计划吧，虽然知道很大部分很难完成，但还是写一下吧，万一完成了呢。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
